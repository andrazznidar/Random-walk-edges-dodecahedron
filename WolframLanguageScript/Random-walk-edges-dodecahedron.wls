#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*(* Ported from Julia version https://github.com/andrazznidar/Random-walk-edges-dodecahedron/ *)*)
(**)
(*(* Each line of this matrix legalMoves represents a vertex and specifies three neighboring vertices *)*)
(*legalMoves={{2,3,4},{1,5,7},{1,6,8},{1,9,10},{2,6,11},{3,5,12},{2,9,13},{3,10,14},{4,7,15},{4,8,16},{5,13,17},{6,14,17},{7,11,18},{8,12,19},{9,16,18},{10,15,19},{11,12,20},{13,15,20},{14,16,20},{17,18,19}};*)
(*legalMoves // MatrixForm;*)
(**)
(*(* Function move expects one number as a current vertex and a matrix of legal moves. It returns one number as a new, randomly chosen, legal, current vertex. *)*)
(*move[n_, A_] := A[[n,RandomInteger[{1,3}]]]*)
(**)
(*(* Function simulate expects one number as the number of simulations and a matrix of legal moves. It returns the average number of moves the spider needed in to get to an ant *)*)
(*simulate[noSimulations_, B_] := Module[{sum=0}, ( *)
(*Module[{i=0, ant=1, spider=2, noMoves=0 }, ( *)
(*For[i=0,i<noSimulations,i++,( *)
(*(* The state of the simulation is reset. Ant is positioned in a vertex numbered 1.*)
(*Spider is positioned in a vertex numbered 20.*)
(*Number of moves is reset to 0. *)*)
(*ant = 1;*)
(*spider = 20;*)
(*noMoves = 0;*)
(**)
(*(* Until the spider moves to the desired position, it moves in random, legal moves that are counted. *)*)
(*While[ant != spider, ( *)
(*spider = move[spider, B];*)
(*noMoves++;*)
(*)];*)
(**)
(*(* The number of moves needed in this simulation is added to the sum of all moves needed in previous simulations. *)*)
(*sum+=noMoves;*)
(*)];*)
(**)
(*(* The average number of moves is calculated by dividing the sum of all moves needed in all simulations by the number of sumulations. *)*)
(*Return[N[sum/noSimulations]];*)
(*)];*)
(*)]*)
(**)
(*(* Specify the number of simulations for every function simulate call. *)*)
(*noSimulations = 1000000;*)
(**)
(*(* Run the function 10 times and print their averages. *)*)
(*For[j=0, j<10, j++, Print[simulate[noSimulations, legalMoves]]];*)
